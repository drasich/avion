- check if option some/none in property works correctly
- todo over operations
- update input for gameview
- make camera view or just show the gameview while working.
- views update : scene changed so update the views.
- represent the camera with somthing visible and selectable
  + differentiate between current camera and other cameras.
- be able to set camera of the scene -> scene settings (when nothing selected?)
  -> be able to represent any struct with a widget, look at serde for more tricks
- restore previous scene when closing the gameview.
- be able to save the current "playing scene"



- add/change compdata : confirm it works
- remove child of object : view dormin and how to change the scene.
  def.rs : remove_selected_objects, must save parents info, must check and not remove child if the parent will be removed anyway
  unless the scene structure changed we must remove children from the scene

- update material/shader in live, reread files.
- tree : make another widget to replace genlist tree? : 
  change object order?
  change object parent,
  remove one object with suppr, 
  remove all seleted object with suppr, 
  rename object
  copy object

TODO in def.rs

DONE?
uniforms in material

DONE
- id system

TODO
- save window pos/size, widget pos/size
- spinner entry undo/redo problem
- make tree a widget like property
- focus when writing data in entries

- when we changed property of a compdata, we have to reinit his components...
- separate texture and img
- transform property update_changed in propertyshow.update_widget

  - for each objects of the scene, keep a list of references of ui objects that use
  this objects, so when the objects changed we can update the ui.

- operation system / search for //TODO add operation
  - undo/redo
  - dragger


Components
- review component system
- lua component serialization?
